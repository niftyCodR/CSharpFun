<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
using System;

namespace CSharpFun
{
	public static partial class Option
    {<# for(var typeParamCount=2;typeParamCount<=16;typeParamCount++)
{
	var range = Enumerable.Range(1, typeParamCount);
	var typeParams = string.Join(", ", range.Select(i => $"T{i}"));
	var bindParams = string.Join(", ", range.Select(i => $"tuple.Item{i}"));
#>

		public static TResult Match<<#=typeParams #>, TResult>(this Option<(<#=typeParams #>)> option, Func<<#=typeParams #>, TResult> onSome, Func<TResult> onNone)
		{
			return option.Match(tuple => onSome(<#=bindParams #>), onNone);
		}
<#} #>
    }
}