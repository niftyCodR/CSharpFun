<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
using System;

namespace CSharpFun.Ext
{
    public static partial class FnExtensions
    {<# for(var typeParamCount=2;typeParamCount<=16;typeParamCount++)
{
	var range = Enumerable.Range(1, typeParamCount);
	var typeParams = string.Join(", ", range.Select(i => $"T{i}"));
	var values = string.Join(", ", range.Select(i => $"t{i}"));
#>

		public static Func<<#=typeParams #>, TResult> Tup<<#=typeParams #>, TResult>(this Func<(<#=typeParams #>), TResult> fn)
        {
            return (<#=values #>) => fn((<#=values #>));
        }
<#} #>
	}
}